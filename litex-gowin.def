Bootstrap: docker
From: ubuntu:22.04

%environment
    # Gowin install location
    export GOWIN_ROOT=/opt/gowin
    export GOWIN_LIB_PATH=$GOWIN_ROOT/IDE/lib
    export QT_QPA_PLATFORM_PLUGIN_PATH=$GOWIN_ROOT/IDE/plugins/qt/platforms

    # Use host's libstdc++.so.6 for Mesa/OpenGL
    export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libstdc++.so.6

    # Run Qt with Gowin's libraries
    export LD_LIBRARY_PATH=$GOWIN_LIB_PATH:$LD_LIBRARY_PATH

    # Optional: fallback for runtime directory
    export XDG_RUNTIME_DIR=/tmp/xdg-runtime

    # Optional: force software rendering if needed
    # export LIBGL_ALWAYS_SOFTWARE=1

    export PATH=$GOWIN_ROOT/IDE/bin:$PATH

    export DEBIAN_FRONTEND=noninteractive
    export TZ=Asia/Tokyo

%post
    echo "Asia/Tokyo" > /etc/timezone
    ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
    apt-get update
    apt-get install -y tzdata
    dpkg-reconfigure --frontend noninteractive tzdata

    apt-get update && apt-get install -y \
    	libftdi1-2 libhidapi-hidraw0 \
	libhidapi-dev \
        libnss3 \
        libglib2.0-0 \
        libxdamage1 \
        libasound2 \
        libxcb1 \
        libx11-xcb1 \
        libxcb-xinerama0 \
        libxcb-icccm4 \
        libxcb-image0 \
        libxcb-keysyms1 \
        libxcb-render-util0 \
        libxcb-xfixes0 \
        libxcb-shape0 \
        libxcb-randr0 \
        libxcb-sync1 \
        libxcb-xkb1 \
        libxcb-render0 \
        libxcb-util1 \
        libxkbcommon-x11-0 \
        libxkbcommon0 \
        libgl1-mesa-glx \
        libgl1-mesa-dri \
        libsm6 \
        libice6 \
        libdbus-1-3 \
        libfontconfig1 \
        libfreetype6 \
        libxext6 \
        libxau6 \
        libxdmcp6 \
        libxfixes3 \
        libx11-6 \
        libxrandr2 \
        libxcursor1 \
        libxi6 \
        libxtst6 \
	x11-utils \
        python3-full python3-pip python3-setuptools python3-wheel \
         build-essential git wget curl vim \
         bash-completion \
         libopencv-dev libasound2-dev libxkbcommon-x11-0 libusb-1.0-0 \
        minicom \
        x11-apps \
         verilator \
         meson ninja-build \
         libevent-dev libjson-c-dev \
         gcc-riscv64-linux-gnu \
         pkg-config \
         ca-certificates

    # Create a dummy runtime dir to avoid XDG complaints
    mkdir -p /tmp/xdg-runtime
    chmod 700 /tmp/xdg-runtime

#    # Install Gowin IDE (example - change as needed)
#    mkdir -p /opt/gowin
#    tar -xf /tmp/Gowin_Linux.tar.gz -C /opt/gowin

#%files
#    # Copy Gowin installer
#    Gowin_Linux.tar.gz /tmp/Gowin_Linux.tar.gz

    # Upgrade pip and install Python packages
    pip3 install --upgrade pip
    pip3 install meson ninja
    
    # Clone and install LiteX
    mkdir -p /opt/litex
    cd /opt/litex
    wget https://raw.githubusercontent.com/enjoy-digital/litex/master/litex_setup.py
    chmod +x litex_setup.py

    # Patch the pip install command inside the script
    sed -i 's/pip install/pip install --break-system-packages/g' litex_setup.py

    python3 litex_setup.py --init --install --config=standard
 
    mkdir -p /opt/openFPGALoader
    wget -qO - https://github.com/trabucayre/openFPGALoader/releases/download/v0.13.1/ubtuntu22.04-openFPGALoader.tgz \
        | tar -xz -C /opt/openFPGALoader
    ln -s /opt/openFPGALoader/usr/local/bin/openFPGALoader /usr/local/bin/openFPGALoader 

%runscript
    echo "Launching Gowin IDE"
    exec $GOWIN_ROOT/IDE/bin/gw_sh "$@"

